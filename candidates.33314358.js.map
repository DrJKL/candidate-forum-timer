{"version":3,"sources":["src/js/candidates.js"],"names":["Candidate","name","timeLeft","timeLimitTotal","clone","countingDown","console","log","clearInterval","setInterval","subtract","timeGranularity","add","timeDelta","timeToUse","isTimeUp","moment","duration","minutes","toString","padStart","seconds","milliseconds","asMilliseconds","allCandidates","map","candidateName","totalTimeLeft","candidate"],"mappings":";AA+DC,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA/DKA,IAAAA,EAAAA,WAIUC,SAAAA,EAAAA,GAAM,EAAA,KAAA,GACTA,KAAAA,KAAOA,EACPC,KAAAA,SAAWF,EAAUG,eAAeC,QACpCC,KAAAA,aAAe,KAwD3B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,cArDiB,MAAA,WAAA,IAAA,EAAA,KAEN,GADJC,QAAQC,IAAI,WAAY,KAAKN,MACzB,KAAKI,aAGL,OAFAG,cAAc,KAAKH,mBACdA,KAAAA,aAAe,MAGnBA,KAAAA,aAAeI,YAAY,WAC5B,EAAKP,SAASQ,SAASV,EAAUW,gBAAiB,OACnDX,EAAUW,mBA4CpB,CAAA,IAAA,UAzCa,MAAA,WACDT,KAAAA,SAASU,IAAIZ,EAAUa,aAwCnC,CAAA,IAAA,aArCgB,MAAA,WACJX,KAAAA,SAASQ,SAASV,EAAUa,aAoCxC,CAAA,IAAA,YAjCe,MAAA,WAAS,QAAE,KAAKR,eAiC/B,CAAA,IAAA,cA/BiB,MAAA,WACJS,IAAAA,EAAY,KAAKC,WAAaC,OAAOC,WAAWP,SAAS,KAAKR,UAAY,KAAKA,SAC9E,MAAA,GAAGY,OAAAA,EAAUI,UAAUC,WAAWC,SAAS,EAAG,GAC9CN,KAAAA,GAAAA,OAAAA,EAAUO,UAAUF,WAAWC,SAAS,EAAG,GAC3CN,KAAAA,GAAAA,OAAAA,EAAUQ,eAAeH,WAAWC,SAAS,EAAE,MA2B7D,CAAA,IAAA,qBAxBwB,MAAA,WACP,MAAA,GAAA,OAAK,KAAKlB,SAASqB,iBAAmBvB,EAAUG,eAAeoB,iBAA/D,IAAV,OAuBP,CAAA,IAAA,WApBc,MAAA,WACA,OAAA,KAAKrB,SAASqB,kBAAoB,MAmBhD,EA/DKvB,GAAAA,EAAAA,EACsBgB,iBAAAA,OAAOC,SAAS,GAAI,MAD1CjB,EAAAA,EAEuB,kBAAA,IAFvBA,EAAAA,EAGiBgB,YAAAA,OAAOC,SAAS,EAAG,MA8C1C,IAAMO,EAAgB,CAClB,oBACA,iBACA,eACA,eACA,gBACA,aACA,cACA,gBACA,gBACFC,IAAI,SAAAC,GAAiB,OAAA,IAAI1B,EAAU0B,KAErC,SAASC,IACEH,OAAAA,EAAcC,IAAI,SAAAG,GAAaA,OAAAA,EAAU1B","file":"candidates.33314358.js","sourceRoot":"..","sourcesContent":["class Candidate {\r\n    static timeLimitTotal = moment.duration(10, 's');\r\n    static timeGranularity = 50;\r\n    static timeDelta = moment.duration(1, 's');\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.timeLeft = Candidate.timeLimitTotal.clone();\r\n        this.countingDown = null;\r\n    }\r\n\r\n    toggleTimer() {\r\n        console.log(\"Toggling\", this.name);\r\n        if (this.countingDown) {\r\n            clearInterval(this.countingDown);\r\n            this.countingDown = null;\r\n            return;\r\n        }\r\n        this.countingDown = setInterval(() => {\r\n            this.timeLeft.subtract(Candidate.timeGranularity, 'ms');\r\n        }, Candidate.timeGranularity);\r\n    }\r\n\r\n    addTime() {\r\n        this.timeLeft.add(Candidate.timeDelta);\r\n    }\r\n\r\n    removeTime() {\r\n        this.timeLeft.subtract(Candidate.timeDelta);\r\n    }\r\n\r\n    isRunning() { return !!this.countingDown; }\r\n\r\n    getTimeLeft() {\r\n        const timeToUse = this.isTimeUp() ? moment.duration().subtract(this.timeLeft) : this.timeLeft;\r\n        return `${timeToUse.minutes().toString().padStart(2, 0)}:` +\r\n            `${timeToUse.seconds().toString().padStart(2, 0)}:` +\r\n            `${timeToUse.milliseconds().toString().padStart(3,0)}`;\r\n    }\r\n\r\n    getProgressPercent() {\r\n        return `${100*(this.timeLeft.asMilliseconds() / Candidate.timeLimitTotal.asMilliseconds())}%`;\r\n    }\r\n\r\n    isTimeUp() {\r\n        return this.timeLeft.asMilliseconds() <= 0;\r\n    }\r\n\r\n}\r\n\r\nconst allCandidates = [\r\n    'Margaret Abe-Koga',\r\n    'Jose Gutierrez',\r\n    'John Lashlee',\r\n    'Sally Lieber',\r\n    'Lisa Matichak',\r\n    'Alex Nunez',\r\n    'Paul Roales',\r\n    'Pat Showalter',\r\n    'Lenny Siegel',\r\n].map(candidateName => new Candidate(candidateName));\r\n\r\nfunction totalTimeLeft() {\r\n    return allCandidates.map(candidate => candidate.timeLeft);\r\n}"]}